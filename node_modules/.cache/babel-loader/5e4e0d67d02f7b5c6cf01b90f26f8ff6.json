{"ast":null,"code":"import _slicedToArray from \"/Users/sichn/Desktop/React course/Week3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sichn/Desktop/React course/Week3/src/Weather.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nexport default function Weather(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      temperature = _useState2[0],\n      setTemperature = _useState2[1];\n\n  function displayWeather(response) {\n    setTemperature(Math.round(response.data.main.temp));\n  }\n\n  if (temperature) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, \"The Weather in \", props.city, \" is \", temperature, \"\\xB0C\");\n  } else {\n    var apiKey = \"72c3892be7b4efbc064a6b2d18164d51\";\n    var apiUrl = \"https://api.openweathermap.org/data/2.5/weather?q=\".concat(props.city, \"&appid=\").concat(apiKey, \"&units=metric\");\n    axios.get(apiUrl).then(displayWeather);\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }\n    }, \" Loading temperature for \", props.city, \"....\");\n  }\n}","map":{"version":3,"sources":["/Users/sichn/Desktop/React course/Week3/src/Weather.js"],"names":["React","useState","axios","Weather","props","temperature","setTemperature","displayWeather","response","Math","round","data","main","temp","city","apiKey","apiUrl","get","then"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACrC,kBAAoCH,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAKI,WAAL;AAAA,MAAkBC,cAAlB;;AAEA,WAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAChCF,IAAAA,cAAc,CAACG,IAAI,CAACC,KAAL,CAAWF,QAAQ,CAACG,IAAT,CAAcC,IAAd,CAAmBC,IAA9B,CAAD,CAAd;AACD;;AAED,MAAIR,WAAJ,EAAiB;AACf,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACkBD,KAAK,CAACU,IADxB,UACkCT,WADlC,UADF;AAKD,GAND,MAMO;AACL,QAAIU,MAAM,GAAG,kCAAb;AACA,QAAIC,MAAM,+DAAwDZ,KAAK,CAACU,IAA9D,oBAA4EC,MAA5E,kBAAV;AACAb,IAAAA,KAAK,CAACe,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBX,cAAvB;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAA6BH,KAAK,CAACU,IAAnC,SAAP;AACD;AACF","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function Weather(props) {\n  let [temperature, setTemperature] = useState(\"\");\n\n  function displayWeather(response) {\n    setTemperature(Math.round(response.data.main.temp));\n  }\n\n  if (temperature) {\n    return (\n      <p>\n        The Weather in {props.city} is {temperature}Â°C\n      </p>\n    );\n  } else {\n    let apiKey = \"72c3892be7b4efbc064a6b2d18164d51\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${props.city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(displayWeather);\n    return <p> Loading temperature for {props.city}....</p>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}