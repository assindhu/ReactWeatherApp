{"ast":null,"code":"import _slicedToArray from \"/Users/sichn/Desktop/ReactWeatherApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sichn/Desktop/ReactWeatherApp/src/WeatherForecast.js\";\nimport React, { useState } from \"react\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport \"./WeatherForecast.css\";\nimport axios from \"axios\";\nexport default function WeatherForecast(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      forecast = _useState4[0],\n      setForecast = _useState4[1];\n\n  function handleResponse(response) {\n    setLoaded(true);\n    setForecast(response.data.daily);\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"WeatherForecast\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(WeatherForecastDay, {\n      data: forecast[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }))));\n  } else {\n    var apikey = \"72c3892be7b4efbc064a6b2d18164d51\";\n    var lat = props.coord.lat;\n    var lon = props.coord.lon;\n    var apiurl = \"https://api.openweathermap.org/data/3.0/onecall?lat=\".concat(lat, \"&lon=\").concat(lon, \"&exclude={part}&appid=\").concat(apikey, \"&units=metric\");\n    axios.get(apiurl).then(handleResponse);\n  }\n}","map":{"version":3,"sources":["/Users/sichn/Desktop/ReactWeatherApp/src/WeatherForecast.js"],"names":["React","useState","WeatherIcon","axios","WeatherForecast","props","loaded","setLoaded","forecast","setForecast","handleResponse","response","data","daily","apikey","lat","coord","lon","apiurl","get","then"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,uBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC7C,kBAA0BJ,QAAQ,CAAC,KAAD,CAAlC;AAAA;AAAA,MAAKK,MAAL;AAAA,MAAaC,SAAb;;AACA,mBAA8BN,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAKO,QAAL;AAAA,MAAeC,WAAf;;AACA,WAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAChCJ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,IAAAA,WAAW,CAACE,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAX;AACD;;AAED,MAAIP,MAAJ,EAAY;AACV,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,kBAAD;AAAoB,MAAA,IAAI,EAAEE,QAAQ,CAAC,CAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CADF;AASD,GAVD,MAUO;AACL,QAAIM,MAAM,GAAG,kCAAb;AACA,QAAIC,GAAG,GAAGV,KAAK,CAACW,KAAN,CAAYD,GAAtB;AACA,QAAIE,GAAG,GAAGZ,KAAK,CAACW,KAAN,CAAYC,GAAtB;AACA,QAAIC,MAAM,iEAA0DH,GAA1D,kBAAqEE,GAArE,mCAAiGH,MAAjG,kBAAV;AAEAX,IAAAA,KAAK,CAACgB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBV,cAAvB;AACD;AACF","sourcesContent":["import React, { useState } from \"react\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport \"./WeatherForecast.css\";\nimport axios from \"axios\";\n\nexport default function WeatherForecast(props) {\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n  function handleResponse(response) {\n    setLoaded(true);\n    setForecast(response.data.daily);\n  }\n\n  if (loaded) {\n    return (\n      <div className=\"WeatherForecast\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <WeatherForecastDay data={forecast[0]} />\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    let apikey = \"72c3892be7b4efbc064a6b2d18164d51\";\n    let lat = props.coord.lat;\n    let lon = props.coord.lon;\n    let apiurl = `https://api.openweathermap.org/data/3.0/onecall?lat=${lat}&lon=${lon}&exclude={part}&appid=${apikey}&units=metric`;\n\n    axios.get(apiurl).then(handleResponse);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}